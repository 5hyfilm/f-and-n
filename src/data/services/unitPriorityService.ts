// src/data/services/unitPriorityService.ts - Complete Implementation
import { ProductWithMultipleBarcodes } from "../types/csvTypes";

// ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö priority
export type UnitType = "cs" | "dsp" | "ea";

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
export interface UnitDisplayInfo {
  type: UnitType;
  label: string;
  shortLabel: string;
  description: string;
  column: "cs" | "piece"; // column ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô database
}

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
export interface DualUnitInput {
  primaryUnit: UnitDisplayInfo;
  secondaryUnit: UnitDisplayInfo;
  allowFractional: boolean; // ‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å "‡πÄ‡∏®‡∏©" ‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
}

// Configuration ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ï‡πà‡∏≤‡∏á‡πÜ
const UNIT_CONFIG: Record<UnitType, UnitDisplayInfo> = {
  cs: {
    type: "cs",
    label: "‡∏•‡∏±‡∏á (Case/Carton)",
    shortLabel: "‡∏•‡∏±‡∏á",
    description: "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏•‡∏±‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà",
    column: "cs",
  },
  dsp: {
    type: "dsp",
    label: "‡πÅ‡∏û‡πá‡∏Ñ (Display Pack)",
    shortLabel: "‡πÅ‡∏û‡πá‡∏Ñ",
    description: "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÅ‡∏û‡πá‡∏Ñ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡πÅ‡∏™‡∏î‡∏á",
    column: "cs", // DSP ‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô column cs
  },
  ea: {
    type: "ea",
    label: "‡∏ä‡∏¥‡πâ‡∏ô (Each)",
    shortLabel: "‡∏ä‡∏¥‡πâ‡∏ô",
    description: "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô",
    column: "piece",
  },
};

// ‡∏´‡∏ô‡πà‡∏ß‡∏¢ "‡πÄ‡∏®‡∏©" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
const FRACTIONAL_UNIT: UnitDisplayInfo = {
  type: "ea",
  label: "‡πÄ‡∏®‡∏© (‡∏ä‡∏¥‡πâ‡∏ô)",
  shortLabel: "‡πÄ‡∏®‡∏©",
  description: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏®‡∏©‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
  column: "piece",
};

// ‡∏•‡∏≥‡∏î‡∏±‡∏ö priority ‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
const UNIT_PRIORITY: UnitType[] = ["cs", "dsp", "ea"];

/**
 * ‡∏´‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
 */
export const getAvailableUnits = (
  product: ProductWithMultipleBarcodes
): UnitType[] => {
  const availableUnits: UnitType[] = [];

  if (product.barcodes.cs) availableUnits.push("cs");
  if (product.barcodes.dsp) availableUnits.push("dsp");
  if (product.barcodes.ea) availableUnits.push("ea");

  return availableUnits;
};

/**
 * ‡∏´‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ï‡∏≤‡∏° priority: CS ‚Üí DSP ‚Üí EA
 */
export const getNextAvailableUnit = (
  currentUnit: UnitType,
  availableUnits: UnitType[]
): UnitType | null => {
  const currentIndex = UNIT_PRIORITY.indexOf(currentUnit);

  // ‡∏´‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
  for (let i = currentIndex + 1; i < UNIT_PRIORITY.length; i++) {
    const nextUnit = UNIT_PRIORITY[i];
    if (availableUnits.includes(nextUnit)) {
      return nextUnit;
    }
  }

  return null; // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 *
 * ‡∏ï‡∏≤‡∏° Logic ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ CS + DSP ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å CS ‡πÅ‡∏•‡∏∞ DSP
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ CS + EA (‡πÑ‡∏°‡πà‡∏°‡∏µ DSP) ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å CS ‡πÅ‡∏•‡∏∞ EA
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏Ñ‡πà CS ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å CS ‡πÅ‡∏•‡∏∞ "‡πÄ‡∏®‡∏©"
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ DSP + EA ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å DSP ‡πÅ‡∏•‡∏∞ EA
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏Ñ‡πà DSP ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å DSP ‡πÅ‡∏•‡∏∞ "‡πÄ‡∏®‡∏©"
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏Ñ‡πà EA ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å EA ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
 */
export const createDualUnitInput = (
  scannedUnit: UnitType,
  product: ProductWithMultipleBarcodes
): DualUnitInput => {
  const availableUnits = getAvailableUnits(product);
  const nextUnit = getNextAvailableUnit(scannedUnit, availableUnits);

  const primaryUnit = UNIT_CONFIG[scannedUnit];

  let secondaryUnit: UnitDisplayInfo;
  let allowFractional = false;

  if (nextUnit) {
    // ‡∏°‡∏µ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚Üí ‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ô‡∏±‡πâ‡∏ô
    secondaryUnit = UNIT_CONFIG[nextUnit];
    console.log(`‚úÖ Found next unit: ${scannedUnit} ‚Üí ${nextUnit}`);
  } else {
    // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚Üí ‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å "‡πÄ‡∏®‡∏©"
    secondaryUnit = FRACTIONAL_UNIT;
    allowFractional = true;
    console.log(`‚ö†Ô∏è No next unit found for ${scannedUnit}, using fractional`);
  }

  console.log(`üìã Dual Unit Config Created:`, {
    scannedUnit,
    availableUnits,
    primaryUnit: primaryUnit.shortLabel,
    secondaryUnit: secondaryUnit.shortLabel,
    allowFractional,
  });

  return {
    primaryUnit,
    secondaryUnit,
    allowFractional,
  };
};

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô EA ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
 */
export const isSingleUnitInput = (scannedUnit: UnitType): boolean => {
  return scannedUnit === "ea";
};

/**
 * Get unit display info
 */
export const getUnitDisplayInfo = (unitType: UnitType): UnitDisplayInfo => {
  return UNIT_CONFIG[unitType];
};

/**
 * Get fractional unit info
 */
export const getFractionalUnitInfo = (): UnitDisplayInfo => {
  return FRACTIONAL_UNIT;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
 */
export const createInputDescription = (dualUnit: DualUnitInput): string => {
  const { primaryUnit, secondaryUnit, allowFractional } = dualUnit;

  if (allowFractional) {
    return `‡∏Å‡∏£‡∏≠‡∏Å ${primaryUnit.shortLabel} ‡πÅ‡∏•‡∏∞ ${secondaryUnit.shortLabel} (‡∏´‡∏≤‡∏Å‡∏°‡∏µ)`;
  }

  return `‡∏Å‡∏£‡∏≠‡∏Å ${primaryUnit.shortLabel} ‡πÅ‡∏•‡∏∞ ${secondaryUnit.shortLabel}`;
};

/**
 * Validate input values
 */
export const validateDualUnitInput = (
  primaryValue: number,
  secondaryValue: number,
  dualUnit: DualUnitInput
): { isValid: boolean; error?: string } => {
  // Primary unit ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ >= 0
  if (primaryValue < 0) {
    return {
      isValid: false,
      error: `${dualUnit.primaryUnit.shortLabel} ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ 0 ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤`,
    };
  }

  // Secondary unit ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ >= 0
  if (secondaryValue < 0) {
    return {
      isValid: false,
      error: `${dualUnit.secondaryUnit.shortLabel} ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ 0 ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤`,
    };
  }

  // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏´‡∏ô‡πà‡∏ß‡∏¢
  if (primaryValue === 0 && secondaryValue === 0) {
    return {
      isValid: false,
      error: "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏´‡∏ô‡πà‡∏ß‡∏¢",
    };
  }

  return { isValid: true };
};

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏ô‡∏ö‡πâ‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô
 */
export const analyzeProductUnits = (
  product: ProductWithMultipleBarcodes
): {
  hasCS: boolean;
  hasDSP: boolean;
  hasEA: boolean;
  availableUnits: UnitType[];
  recommendedInputType: "single" | "dual";
} => {
  const hasCS = !!product.barcodes.cs;
  const hasDSP = !!product.barcodes.dsp;
  const hasEA = !!product.barcodes.ea;
  const availableUnits = getAvailableUnits(product);

  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏Ñ‡πà EA ‚Üí single input
  const recommendedInputType =
    availableUnits.length === 1 && hasEA ? "single" : "dual";

  return {
    hasCS,
    hasDSP,
    hasEA,
    availableUnits,
    recommendedInputType,
  };
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö
 */
export const getInputModeDescription = (
  scannedUnit: UnitType,
  product: ProductWithMultipleBarcodes
): string => {
  const analysis = analyzeProductUnits(product);

  if (scannedUnit === "ea") {
    return "‡∏™‡πÅ‡∏Å‡∏ô EA: ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£";
  }

  if (scannedUnit === "cs") {
    if (analysis.hasDSP) {
      return "‡∏™‡πÅ‡∏Å‡∏ô CS: ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏±‡∏á + ‡πÅ‡∏û‡πá‡∏Ñ";
    } else if (analysis.hasEA) {
      return "‡∏™‡πÅ‡∏Å‡∏ô CS: ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏±‡∏á + ‡∏ä‡∏¥‡πâ‡∏ô";
    } else {
      return "‡∏™‡πÅ‡∏Å‡∏ô CS: ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏±‡∏á + ‡πÄ‡∏®‡∏©";
    }
  }

  if (scannedUnit === "dsp") {
    if (analysis.hasEA) {
      return "‡∏™‡πÅ‡∏Å‡∏ô DSP: ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏û‡πá‡∏Ñ + ‡∏ä‡∏¥‡πâ‡∏ô";
    } else {
      return "‡∏™‡πÅ‡∏Å‡∏ô DSP: ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏û‡πá‡∏Ñ + ‡πÄ‡∏®‡∏©";
    }
  }

  return "‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏™‡πÅ‡∏Å‡∏ô";
};
